# This is a basic workflow to help you get started with Actions

name: Tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      DB_HOST: localhost
      DB_NAME: lrv
      DB_USER: lrv
      DB_PASS: ${{ secrets.GITHUB_TOKEN }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Update apt
        run: sudo apt update
        
      - name: Install ufw
        run: sudo apt install ufw -y
      
      - name: Setup Ansible
        run: python3 -m pip install --user ansible
        
      - name: Set masked outputs
        run: |
          echo "::add-mask::$DB_HOST"
          echo "::add-mask::$DB_NAME"
          echo "::add-mask::$DB_USER"
          echo "::add-mask::$DB_PASS"

      - name: Run Ansible playbook
        run: |
          cat << EOF > hosts
          [server]
          localhost
          [db]
          localhost
          EOF
          ansible-playbook -i ./hosts main.yml -e "db_host=$DB_HOST db_name=$DB_NAME db_user=$DB_USER db_pass=$DB_PASS" -c local
      
      - name: Test application
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./.github/tests

      - name: Test if application uses MariaDB
        run: |
          sudo apt-get install mariadb-client -y
          mysql -h $DB_HOST -u $DB_USER -D $DB_NAME -p$DB_PASS -e 'SHOW TABLES;' | grep users
  
